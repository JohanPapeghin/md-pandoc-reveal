{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introduction Une pr\u00e9sentation scientifique doit se penser en termes de raison graphique, \u00e0 contre-courant de la culture pr\u00e9sentationnelle dominante fa\u00e7onn\u00e9e par PowerPoint. Ne pas le faire, c'est saboter sa propre \u00e9nonciation. Tufte, E. R. (2003). The Cognitive Style of PowerPoint: Pitching Out Corrupts Within. Cheshire : Graphics Press. Frommer, F. (2010). La pens\u00e9e Powerpoint : enqu\u00eate sur ce logiciel qui rend stupide. Paris : La D\u00e9couverte. Robles-Anderson, E., & Svensson, P. (2016). \u00ab One Damn Slide After Another \u00bb: PowerPoint at Every Occasion for Speech. Computational Culture , (5). http://computationalculture.net/one-damn-slide-after-another-powerpoint-at-every-occasion-for-speech/ \u00c0 ces trois r\u00e9f\u00e9rences, on peut ajouter les nombreux travaux de l'\u00e9quipe d'Yves Jeanneret et Emmanu\u00ebl Souchier, avec les concepts d'architexte, de plastigramme, etc. Deux points de vigilance La liste \u00e0 puces est souvent une b\u00e9quille creuse qui tend \u00e0 effacer les liens entre les \u00e9tapes d'un raisonnement. Pour repr\u00e9senter efficacement de l'information, il faut acqu\u00e9rir des notions de composition, d'\u00e9dition, de design (hi\u00e9rarchie, blanc, densit\u00e9, r\u00e9solution, etc.) sous peine de contre-productivit\u00e9 fatale (\u00ab Death by PowerPoint \u00bb). C'est l\u00e0 que la courbe d'apprentissage est la plus pentue, et le b\u00e9n\u00e9fice intellectuel le plus grand. Desiderata P\u00e9rennit\u00e9 : travailler avec un format l\u00e9ger, ouvert, facile \u00e0 lire et \u00e0 \u00e9crire. Efficacit\u00e9 : automatiser, \u00e9diter pr\u00e9cis\u00e9ment, reproduire rapidement et s\u00fbrement. Fonctionnalit\u00e9 : b\u00e9n\u00e9ficier des innovations du web \u2013 mise en page adaptative, d\u00e9filement, transclusion, etc. Libert\u00e9 : accro\u00eetre son agilit\u00e9 informatique, choisir ses d\u00e9pendances logicielles en toute conscience. La suite Office (Word, Excel, PowerPoint) et la suite Google (Docs, Sheets, Slides) ne nous apprennent strictement rien sur la fabrique du Web. Ce qu\u2019on peut r\u00e9aliser avec quelques lignes de texte brut me para\u00eet bien plus int\u00e9ressant dans une perspective de culture num\u00e9rique. Les comp\u00e9tences de mise en page qu\u2019on apprend pour styler une pr\u00e9sentation en Reveal.js, par exemple, sont transf\u00e9rables \u00e0 toute autre projet qui utilise les technologies du Web \u2013 notamment l'\u00e9dition. Solution propos\u00e9e \u00c9criture en Markdown (avec les ajouts de Pandoc). Mise en forme via CSS. Conversion en HTML (avec Reveal.js) via Pandoc. Pourquoi Markdown avec Pandoc, et pas Asciidoc avec Asciidoctor ? C'est une question de complexit\u00e9 : la s\u00e9mantique d'Asciidoc (h\u00e9rit\u00e9e de DocBook XML) et l'univers logiciel d'Asciidoctor (Ruby, NodeJS) sont trop lourds pour mes besoins. Je pense que ces outils parlent plus facilement aux d\u00e9veloppeurs, aux ing\u00e9nieurs, ainsi qu'aux documentalistes techniques.","title":"Accueil"},{"location":"#introduction","text":"Une pr\u00e9sentation scientifique doit se penser en termes de raison graphique, \u00e0 contre-courant de la culture pr\u00e9sentationnelle dominante fa\u00e7onn\u00e9e par PowerPoint. Ne pas le faire, c'est saboter sa propre \u00e9nonciation. Tufte, E. R. (2003). The Cognitive Style of PowerPoint: Pitching Out Corrupts Within. Cheshire : Graphics Press. Frommer, F. (2010). La pens\u00e9e Powerpoint : enqu\u00eate sur ce logiciel qui rend stupide. Paris : La D\u00e9couverte. Robles-Anderson, E., & Svensson, P. (2016). \u00ab One Damn Slide After Another \u00bb: PowerPoint at Every Occasion for Speech. Computational Culture , (5). http://computationalculture.net/one-damn-slide-after-another-powerpoint-at-every-occasion-for-speech/ \u00c0 ces trois r\u00e9f\u00e9rences, on peut ajouter les nombreux travaux de l'\u00e9quipe d'Yves Jeanneret et Emmanu\u00ebl Souchier, avec les concepts d'architexte, de plastigramme, etc.","title":"Introduction"},{"location":"#deux-points-de-vigilance","text":"La liste \u00e0 puces est souvent une b\u00e9quille creuse qui tend \u00e0 effacer les liens entre les \u00e9tapes d'un raisonnement. Pour repr\u00e9senter efficacement de l'information, il faut acqu\u00e9rir des notions de composition, d'\u00e9dition, de design (hi\u00e9rarchie, blanc, densit\u00e9, r\u00e9solution, etc.) sous peine de contre-productivit\u00e9 fatale (\u00ab Death by PowerPoint \u00bb). C'est l\u00e0 que la courbe d'apprentissage est la plus pentue, et le b\u00e9n\u00e9fice intellectuel le plus grand.","title":"Deux points de vigilance"},{"location":"#desiderata","text":"P\u00e9rennit\u00e9 : travailler avec un format l\u00e9ger, ouvert, facile \u00e0 lire et \u00e0 \u00e9crire. Efficacit\u00e9 : automatiser, \u00e9diter pr\u00e9cis\u00e9ment, reproduire rapidement et s\u00fbrement. Fonctionnalit\u00e9 : b\u00e9n\u00e9ficier des innovations du web \u2013 mise en page adaptative, d\u00e9filement, transclusion, etc. Libert\u00e9 : accro\u00eetre son agilit\u00e9 informatique, choisir ses d\u00e9pendances logicielles en toute conscience. La suite Office (Word, Excel, PowerPoint) et la suite Google (Docs, Sheets, Slides) ne nous apprennent strictement rien sur la fabrique du Web. Ce qu\u2019on peut r\u00e9aliser avec quelques lignes de texte brut me para\u00eet bien plus int\u00e9ressant dans une perspective de culture num\u00e9rique. Les comp\u00e9tences de mise en page qu\u2019on apprend pour styler une pr\u00e9sentation en Reveal.js, par exemple, sont transf\u00e9rables \u00e0 toute autre projet qui utilise les technologies du Web \u2013 notamment l'\u00e9dition.","title":"Desiderata"},{"location":"#solution-proposee","text":"\u00c9criture en Markdown (avec les ajouts de Pandoc). Mise en forme via CSS. Conversion en HTML (avec Reveal.js) via Pandoc. Pourquoi Markdown avec Pandoc, et pas Asciidoc avec Asciidoctor ? C'est une question de complexit\u00e9 : la s\u00e9mantique d'Asciidoc (h\u00e9rit\u00e9e de DocBook XML) et l'univers logiciel d'Asciidoctor (Ruby, NodeJS) sont trop lourds pour mes besoins. Je pense que ces outils parlent plus facilement aux d\u00e9veloppeurs, aux ing\u00e9nieurs, ainsi qu'aux documentalistes techniques.","title":"Solution propos\u00e9e"},{"location":"composants/","text":"Composants du syst\u00e8me Markdown Markdown est un langage de balisage l\u00e9ger, invent\u00e9 pour \u00e9crire plus facilement en HTML. Volontairement basique, sa syntaxe contient : des \u00e9l\u00e9ments en ligne comme emphase simple , emphase forte , lien , code ; des \u00e9l\u00e9ments en bloc comme liste, citation, code, etc. Il existe de multiples variantes qui \u00e9tendent Markdown dans diff\u00e9rentes directions, ainsi qu'une sp\u00e9cification de la syntaxe de base : CommonMark . J'ai traduit le tutoriel Markdown de CommonMark, \u00e0 cette adresse : https://artorig.github.io/tutomd/ . CSS CSS est le langage de mise en forme du web. C'est un outil simple mais puissant. Son principal d\u00e9faut est indirect : les navigateurs n'appliquent pas toujours toutes les fonctionnalit\u00e9s CSS, ni de mani\u00e8re identique. Il faut absolument lire et int\u00e9grer les principes de cascade et d'h\u00e9ritage pour comprendre comment \u00e7a marche et r\u00e9soudre d'\u00e9ventuels probl\u00e8mes. Reveal fait coexister plusieurs feuilles de style (CSS de base, th\u00e8me pr\u00e9d\u00e9fini) auxquelles on rajoute souvent sa propre CSS. Comprendre laquelle s'applique o\u00f9 et pourquoi est indispensable en cas de probl\u00e8me. Le rendu varie en fonction du navigateur. Je recommande Firefox. Reveal Reveal est une collection de fichiers CSS et Javascript qui permettent de repr\u00e9senter un fichier HTML sous forme de pr\u00e9sentation interactive. Ceci permet de combiner les fonctionnalit\u00e9s classiques des logiciels de pr\u00e9sentation (transitions, affichage avec notes\u2026) avec celles du web. Le code de Reveal est open source : https://github.com/hakimel/reveal.js/ Le div notes est sp\u00e9cial : c'est un div pr\u00e9d\u00e9fini, qui ne se note pas avec des accolades, et qui permet de produire des notes d'intervenant pour le mode pr\u00e9sentation de Reveal. Son contenu peut \u00eatre format\u00e9 en Pandoc Markdown. C'est une pop-up qu'on peut faire appara\u00eetre via la touche S du clavier, sous r\u00e9serve d'autoriser dans son navigateur les pop-ups en provenance du fichier de pr\u00e9sentation. Un argument phare de la pr\u00e9sentation en HTML est la transclusion : on peut y inclure presque n'importe quel contenu web via un cadre interactif ( iframe ). Un site peut \u00eatre configur\u00e9 pour qu'il ne soit pas possible de l'inclure dans des iframes . Ce n'est pas courant mais cela existe. Notez la classe stretch appliqu\u00e9e \u00e0 l' iframe . Elle est d\u00e9finie dans la CSS de Reveal et \u00e9tire l'\u00e9l\u00e9ment pour qu'il occupe la hauteur et la largeur disponible relativement au reste de la slide. On peut aussi l'appliquer aux images en tirant parti d'une syntaxe plus l\u00e9g\u00e8re gr\u00e2ce \u00e0 Pandoc (voir plus loin). Pandoc Pandoc est un logiciel de conversion entre langages de balisage. On l'utilise ici pour transformer du Markdown en pr\u00e9sentation HTML Reveal. Pandoc permet de pousser tr\u00e8s loin le compromis entre simplicit\u00e9 et fonctionnalit\u00e9 inh\u00e9rent \u00e0 Markdown gr\u00e2ce \u00e0 des extensions de la syntaxe de base, ainsi que des options de param\u00e9trage de Reveal. Ajouts de Pandoc \u00e0 Markdown Des modifications ou extensions des \u00e9l\u00e9ments existants. Des \u00e9l\u00e9ments nouveaux : maths, notes de bas de page, r\u00e9f\u00e9rences bibliographiques, liste de d\u00e9finitions\u2026 De la mise en forme : coloration syntaxique du code mais surtout une syntaxe raccourcie pour les div et span qui permet d'introduire de la mise en forme facilement. Les sp\u00e9cificit\u00e9s du Pandoc Markdown introduisent de la dette technique. Mais elles r\u00e9pondent utilement \u00e0 des besoins importants sans trop retrancher aux avantages du langage de base. Et l'auteur de Pandoc est au centre de l'initiative CommonMark. Un exemple d'ajout, l'int\u00e9gration d'une gestion automatis\u00e9e des r\u00e9f\u00e9rences bibliographiques : \u00ab PowerPoint offre une vision simplifi\u00e9e et fragment\u00e9e pour \u00eatre accessible et reproductible ; il donne l'illusion de produire du spectaculaire pour s\u00e9duire ; il est minimaliste pour esquiver la critique. \u00bb [@frommer2010, 252] Pandoc place la liste des r\u00e9f\u00e9rences cit\u00e9es dans un div avec l'identifiant refs . Si l'auteur ne le positionne pas lui-m\u00eame, Pandoc l'ajoute automatiquement \u00e0 la fin du document. Dans cette pr\u00e9sentation par exemple, le div a \u00e9t\u00e9 mis au d\u00e9but. Param\u00e9trage de Reveal via Pandoc Dans le fichier : notes d'intervenant, attributs de slide. \u00c0 la conversion : num\u00e9rotation des slides, visibilit\u00e9 des boutons, type de transition, th\u00e8me graphique, etc. pandoc -f markdown in.md -o out.html -t revealjs -s -c prez.css --filter=pandoc-citeproc --bibliography biblio.bib --csl apa-fr.csl -V theme=white -V history=false -V transition=none Dans la commande ci-dessus : l'ordre des diff\u00e9rentes options n'a pas d'importance et la s\u00e9paration en lignes distinctes est faite uniquement par commodit\u00e9 visuelle. Premi\u00e8re ligne : fichiers en entr\u00e9e et en sortie. Deuxi\u00e8me ligne : concerne les r\u00e9f\u00e9rences bibliographiques, s'il y en a. Troisi\u00e8me ligne : options de Reveal. La liste compl\u00e8te des options est ici : https://github.com/hakimel/reveal.js#configuration . history=false \u00e9vite de peupler l'historique du navigateur avec chaque passage de slide. transition=none \u00e9conomise du temps et de l'\u00e9nergie. Les th\u00e8mes pr\u00e9d\u00e9finis sont globalement assez vilains. Le th\u00e8me white (noir sur fond blanc) fournit une meilleure base pour personnaliser que le th\u00e8me par d\u00e9faut. Certains recommandent de tout jeter et repartir de z\u00e9ro, cf. https://www.chenhuijing.com/blog/customising-revealjs-beyond-theming/ Assemblage du syst\u00e8me Plut\u00f4t qu'ex\u00e9cuter Pandoc manuellement, mieux vaut \u00e9crire un script ou utiliser un logiciel. Exemple (macOS) : outils syst\u00e8me (Automator, AppleScript) ; \u00e9diteur de texte g\u00e9n\u00e9raliste scriptable (ex : BBEdit) ; \u00e9diteur sp\u00e9cialis\u00e9 b\u00e2ti autour de Pandoc (ex : Zettlr). Un script pour BBEdit est fourni avec ce fichier \u00e0 titre d'exemple.","title":"1/ Composants du syst\u00e8me"},{"location":"composants/#composants-du-systeme","text":"","title":"Composants du syst\u00e8me"},{"location":"composants/#markdown","text":"Markdown est un langage de balisage l\u00e9ger, invent\u00e9 pour \u00e9crire plus facilement en HTML. Volontairement basique, sa syntaxe contient : des \u00e9l\u00e9ments en ligne comme emphase simple , emphase forte , lien , code ; des \u00e9l\u00e9ments en bloc comme liste, citation, code, etc. Il existe de multiples variantes qui \u00e9tendent Markdown dans diff\u00e9rentes directions, ainsi qu'une sp\u00e9cification de la syntaxe de base : CommonMark . J'ai traduit le tutoriel Markdown de CommonMark, \u00e0 cette adresse : https://artorig.github.io/tutomd/ .","title":"Markdown"},{"location":"composants/#css","text":"CSS est le langage de mise en forme du web. C'est un outil simple mais puissant. Son principal d\u00e9faut est indirect : les navigateurs n'appliquent pas toujours toutes les fonctionnalit\u00e9s CSS, ni de mani\u00e8re identique. Il faut absolument lire et int\u00e9grer les principes de cascade et d'h\u00e9ritage pour comprendre comment \u00e7a marche et r\u00e9soudre d'\u00e9ventuels probl\u00e8mes. Reveal fait coexister plusieurs feuilles de style (CSS de base, th\u00e8me pr\u00e9d\u00e9fini) auxquelles on rajoute souvent sa propre CSS. Comprendre laquelle s'applique o\u00f9 et pourquoi est indispensable en cas de probl\u00e8me. Le rendu varie en fonction du navigateur. Je recommande Firefox.","title":"CSS"},{"location":"composants/#reveal","text":"Reveal est une collection de fichiers CSS et Javascript qui permettent de repr\u00e9senter un fichier HTML sous forme de pr\u00e9sentation interactive. Ceci permet de combiner les fonctionnalit\u00e9s classiques des logiciels de pr\u00e9sentation (transitions, affichage avec notes\u2026) avec celles du web. Le code de Reveal est open source : https://github.com/hakimel/reveal.js/ Le div notes est sp\u00e9cial : c'est un div pr\u00e9d\u00e9fini, qui ne se note pas avec des accolades, et qui permet de produire des notes d'intervenant pour le mode pr\u00e9sentation de Reveal. Son contenu peut \u00eatre format\u00e9 en Pandoc Markdown. C'est une pop-up qu'on peut faire appara\u00eetre via la touche S du clavier, sous r\u00e9serve d'autoriser dans son navigateur les pop-ups en provenance du fichier de pr\u00e9sentation. Un argument phare de la pr\u00e9sentation en HTML est la transclusion : on peut y inclure presque n'importe quel contenu web via un cadre interactif ( iframe ). Un site peut \u00eatre configur\u00e9 pour qu'il ne soit pas possible de l'inclure dans des iframes . Ce n'est pas courant mais cela existe. Notez la classe stretch appliqu\u00e9e \u00e0 l' iframe . Elle est d\u00e9finie dans la CSS de Reveal et \u00e9tire l'\u00e9l\u00e9ment pour qu'il occupe la hauteur et la largeur disponible relativement au reste de la slide. On peut aussi l'appliquer aux images en tirant parti d'une syntaxe plus l\u00e9g\u00e8re gr\u00e2ce \u00e0 Pandoc (voir plus loin).","title":"Reveal"},{"location":"composants/#pandoc","text":"Pandoc est un logiciel de conversion entre langages de balisage. On l'utilise ici pour transformer du Markdown en pr\u00e9sentation HTML Reveal. Pandoc permet de pousser tr\u00e8s loin le compromis entre simplicit\u00e9 et fonctionnalit\u00e9 inh\u00e9rent \u00e0 Markdown gr\u00e2ce \u00e0 des extensions de la syntaxe de base, ainsi que des options de param\u00e9trage de Reveal.","title":"Pandoc"},{"location":"composants/#ajouts-de-pandoc-a-markdown","text":"Des modifications ou extensions des \u00e9l\u00e9ments existants. Des \u00e9l\u00e9ments nouveaux : maths, notes de bas de page, r\u00e9f\u00e9rences bibliographiques, liste de d\u00e9finitions\u2026 De la mise en forme : coloration syntaxique du code mais surtout une syntaxe raccourcie pour les div et span qui permet d'introduire de la mise en forme facilement. Les sp\u00e9cificit\u00e9s du Pandoc Markdown introduisent de la dette technique. Mais elles r\u00e9pondent utilement \u00e0 des besoins importants sans trop retrancher aux avantages du langage de base. Et l'auteur de Pandoc est au centre de l'initiative CommonMark. Un exemple d'ajout, l'int\u00e9gration d'une gestion automatis\u00e9e des r\u00e9f\u00e9rences bibliographiques : \u00ab PowerPoint offre une vision simplifi\u00e9e et fragment\u00e9e pour \u00eatre accessible et reproductible ; il donne l'illusion de produire du spectaculaire pour s\u00e9duire ; il est minimaliste pour esquiver la critique. \u00bb [@frommer2010, 252] Pandoc place la liste des r\u00e9f\u00e9rences cit\u00e9es dans un div avec l'identifiant refs . Si l'auteur ne le positionne pas lui-m\u00eame, Pandoc l'ajoute automatiquement \u00e0 la fin du document. Dans cette pr\u00e9sentation par exemple, le div a \u00e9t\u00e9 mis au d\u00e9but.","title":"Ajouts de Pandoc \u00e0 Markdown"},{"location":"composants/#parametrage-de-reveal-via-pandoc","text":"Dans le fichier : notes d'intervenant, attributs de slide. \u00c0 la conversion : num\u00e9rotation des slides, visibilit\u00e9 des boutons, type de transition, th\u00e8me graphique, etc. pandoc -f markdown in.md -o out.html -t revealjs -s -c prez.css --filter=pandoc-citeproc --bibliography biblio.bib --csl apa-fr.csl -V theme=white -V history=false -V transition=none Dans la commande ci-dessus : l'ordre des diff\u00e9rentes options n'a pas d'importance et la s\u00e9paration en lignes distinctes est faite uniquement par commodit\u00e9 visuelle. Premi\u00e8re ligne : fichiers en entr\u00e9e et en sortie. Deuxi\u00e8me ligne : concerne les r\u00e9f\u00e9rences bibliographiques, s'il y en a. Troisi\u00e8me ligne : options de Reveal. La liste compl\u00e8te des options est ici : https://github.com/hakimel/reveal.js#configuration . history=false \u00e9vite de peupler l'historique du navigateur avec chaque passage de slide. transition=none \u00e9conomise du temps et de l'\u00e9nergie. Les th\u00e8mes pr\u00e9d\u00e9finis sont globalement assez vilains. Le th\u00e8me white (noir sur fond blanc) fournit une meilleure base pour personnaliser que le th\u00e8me par d\u00e9faut. Certains recommandent de tout jeter et repartir de z\u00e9ro, cf. https://www.chenhuijing.com/blog/customising-revealjs-beyond-theming/","title":"Param\u00e9trage de Reveal via Pandoc"},{"location":"composants/#assemblage-du-systeme","text":"Plut\u00f4t qu'ex\u00e9cuter Pandoc manuellement, mieux vaut \u00e9crire un script ou utiliser un logiciel. Exemple (macOS) : outils syst\u00e8me (Automator, AppleScript) ; \u00e9diteur de texte g\u00e9n\u00e9raliste scriptable (ex : BBEdit) ; \u00e9diteur sp\u00e9cialis\u00e9 b\u00e2ti autour de Pandoc (ex : Zettlr). Un script pour BBEdit est fourni avec ce fichier \u00e0 titre d'exemple.","title":"Assemblage du syst\u00e8me"},{"location":"credits/","text":"Cr\u00e9dits Texte et pr\u00e9sentation Arthur Perret \u2013 CC BY Markdown John Gruber \u2013 BSD CSS W3C \u2013 BSD Reveal Hakim El Hattab \u2013 BSD Pandoc John McFarlane \u2013 GPL EB Garamond Georg Duffner, Octavio Pardo \u2013 OFL Art g\u00e9n\u00e9ratif \u00c9tienne Jacob","title":"Cr\u00e9dits"},{"location":"credits/#credits","text":"Texte et pr\u00e9sentation Arthur Perret \u2013 CC BY Markdown John Gruber \u2013 BSD CSS W3C \u2013 BSD Reveal Hakim El Hattab \u2013 BSD Pandoc John McFarlane \u2013 GPL EB Garamond Georg Duffner, Octavio Pardo \u2013 OFL Art g\u00e9n\u00e9ratif \u00c9tienne Jacob","title":"Cr\u00e9dits"},{"location":"fabrication/","text":"Fabrication d'une pr\u00e9sentation Premi\u00e8re slide Le bloc de m\u00e9tadonn\u00e9es en YAML au d\u00e9but du fichier Markdown permet de fournir les \u00e9l\u00e9ments de la premi\u00e8re slide, qui est cr\u00e9\u00e9e automatiquement. Il peut aussi contenir des options propres \u00e0 Pandoc. Slides Un titre signale le d\u00e9but d'une nouvelle slide. Un seul niveau de titre dans tout le document cr\u00e9e une pr\u00e9sentation lin\u00e9aire ; utiliser deux niveaux diff\u00e9rents cr\u00e9e une pr\u00e9sentation en deux dimensions, avec un d\u00e9filement horizontal et vertical. Si on ne met que les croisillons, cela cr\u00e9e un \u00e9l\u00e9ment titre mais sans contenu textuel, donc une nouvelle slide mais non titr\u00e9e. Pour une pr\u00e9sentation \u00e0 deux niveaux de titre, il faut respecter une r\u00e8gle assez pr\u00e9cise. Au niveau de titre le plus \u00e9lev\u00e9 des deux, il ne faut mettre que des titres, aucun contenu (texte, image, etc.) : il faut imaginer une r\u00e8gle disant qu'un titre de section doit toujours \u00eatre suivi directement d'un titre de sous-section. Cette disposition se justifie surtout dans deux cas : pour faciliter les aller-retours dans un long diaporama ; pour produire une version \u00e0 distribuer (PDF, docx\u2026) un peu structur\u00e9e. \u00c0 noter que le public peut ignorer totalement que la pr\u00e9sentation est sur deux niveaux si les effets de transition et les boutons sont masqu\u00e9s, et que l'orateur ne bascule jamais l'affichage en mode overview (touche O). Contenu Toute la syntaxe Markdown est utilisable. On peut \u00e9galement inclure du HTML pour certains \u00e9l\u00e9ments rares mais utiles ( iframe , kbd , etc.). Attributs de slide # Titre {data-background-color=\"#000000\"} Ils viennent modifier le fond d'une slide en y affichant une couleur, image, vid\u00e9o ou iframe indiqu\u00e9e entre accolades. L' iframe en fond est particuli\u00e8rement int\u00e9ressante pour montrer des ressources web en tirant parti de la totalit\u00e9 de l'\u00e9cran (voir slide suivante). Les couleurs peuvent \u00eatre identifi\u00e9es par un nom dans le cas des couleurs nomm\u00e9es (ex : blue, red) et par leurs diff\u00e9rents codes dans tous les cas (hexad\u00e9cimal, rgb, rgba\u2026). Les autres ressources sont incluses via leur URL (local ou distant). Lorsqu'on inclut une iframe qui prend toute la taille de l'\u00e9cran avec data-background-iframe , il peut \u00eatre une bonne id\u00e9e de laisser les contr\u00f4les Reveal apparents avec l'option -V controls=true de Pandoc. En effet, interagir avec le contenu de l'iframe d\u00e9place le cadre de l'interaction : les touches du clavier ne d\u00e9clenchent alors plus les fonctions de Reveal, comme le d\u00e9filement des slides. Laisser les boutons visibles permet de passer \u00e0 la slide suivante et de reprendre le cours normal de la pr\u00e9sentation. Spans et divs Pandoc propose une syntaxe raccourcie pour appliquer des attributs (classes et identifiants CSS) \u00e0 certains \u00e9l\u00e9ments ou groupe d'\u00e9l\u00e9ments. Ceci cr\u00e9e des spans et des divs en HTML. [texte]{attribut} ![l\u00e9gende](image.jpg){attribut} ::: {.attribut} Contenu (texte, image, etc.) Exemple : [css]{.smallcaps} est en petites capitales car Pandoc rajoute la d\u00e9claration suivante pendant la conversion : .smallcaps { font-variant: small-caps; } Partant de ce principe, on peut introduire ses propres r\u00e8gles de mise en forme ou r\u00e9utiliser un jeu de r\u00e8gles existantes. Par exemple, la CSS appliqu\u00e9e \u00e0 cette pr\u00e9sentation ajoute une bordure et une ombre aux images, ainsi qu'une classe borderless \u00e0 appliquer manuellement aux exceptions. On pourrait tr\u00e8s bien faire l'inverse. C'est le principe des macros dans les traitements de texte ou dans LaTeX. \u00c9dition multicanal Dans Reveal, le contenu du div notes ne s'affiche que dans le mode pr\u00e9sentateur. Mais si on convertit le fichier source en Markdown dans un autre format, ce dernier affichera les notes sans aucun traitement sp\u00e9cifique, car un div n'a de sens qu'en HTML et CSS \u2013 Pandoc ne le prend en compte que lorsqu'on fabrique une pr\u00e9sentation Reveal. En s'appuyant sur ce constat, on peut utiliser une autre commande Pandoc sur le m\u00eame fichier pour cr\u00e9er un document distribuable ( handout ) reprenant tout le contenu (en PDF, docx, etc.). Gr\u00e2ce aux attributs rajout\u00e9s \u00e0 Markdown par Pandoc, on peut m\u00eame aller un cran plus loin. CSS permet d'afficher ou masquer des \u00e9l\u00e9ments gr\u00e2ce \u00e0 la propri\u00e9t\u00e9 display , ce qui signifie qu'on peut r\u00e9diger le fichier source de mani\u00e8re \u00e0 masquer une partie du contenu c\u00f4t\u00e9 pr\u00e9sentation (blocs entiers via divs et fragments intra-blocs via spans ) et g\u00e9n\u00e9rer d'autre part un PDF qui affiche tout. Il faut que le contenu s'y pr\u00eate et cela n\u00e9cessite de la gymnastique. Dans une certaine mesure, il s'agit d'emprunter une certaine conception lettr\u00e9e de la programmation ( literate programming , Donald Knuth) et de l'appliquer \u00e0 Pandoc : ce dernier \u00e9tant capable de tisser ( weave ) diff\u00e9rents documents \u00e0 partir d'un m\u00eame fichier, on peut jouer sur les diff\u00e9rences entre formats pour mettre en \u0153uvre un processus d'\u00e9dition multicanal. Recommandations sur les images R\u00e9solution \u00e9lev\u00e9e, grande taille et zoom Alt + clic Un bon d\u00e9but consiste \u00e0 d\u00e9finir les dimensions maximales d'affichage des images proportionnellement \u00e0 la taille de l'\u00e9cran. C'est plus facile \u00e0 dire qu'\u00e0 faire. Il faut par exemple consid\u00e9rer qu'une image dans une figure devrait \u00eatre moins grande qu'une image standard, pour accommoder la l\u00e9gende positionn\u00e9e dessous. Juxtaposition horizontale La comparaison est un bon outil analytique. Il est facile de juxtaposer des images si elles sont au format paysage et de ratio \u00e9quivalent : on les inclut normalement, s\u00e9par\u00e9es par deux retours \u00e0 la ligne. Par d\u00e9faut, Reveal ne propose pas de solution pour afficher du contenu qui d\u00e9passerait la hauteur de la slide. Quelques lignes de CSS suffisent toutefois \u00e0 cr\u00e9er une classe qui vient ajouter du d\u00e9filement en cas de besoin (ici la classe long ). Juxtaposition verticale Pour juxtaposer deux images au format portrait, il faut juste les s\u00e9parer par un retour \u00e0 la ligne. En Markdown, il faut deux retours \u00e0 la ligne pour s\u00e9parer deux paragraphes. En s\u00e9parant des images par un seul retour \u00e0 la ligne, elles appartiennent au m\u00eame paragraphe et sont donc positionn\u00e9es sur une m\u00eame ligne. Assembler deux images et afficher le r\u00e9sultat en image de fond constitue une bonne option pour occuper exactement l'espace maximum disponible, si on n'a pas besoin de l\u00e9gende et si on ma\u00eetrise la r\u00e9solution d'affichage. Alignement d'images Un retour \u00e0 la ligne automatique ( wrap ) intervient lorsque les images mises bout \u00e0 bout exc\u00e8dent la largeur de l'\u00e9cran. Figures Pandoc traite les images contenant du texte alternatif comme une figure avec image et l\u00e9gende. Plusieurs figures Contrairement aux images simples, Pandoc traite les figures comme des blocs. https://pandoc.org/MANUAL.html#extension-implicit_figures Pour juxtaposer plusieurs figures en ligne, il faut reproduire la situation des images contenues dans un paragraphe, en enveloppant les figures avec un \u00e9l\u00e9ment div sur lequel on applique une classe CSS contenant les d\u00e9clarations utiles : retour automatique, espacement, alignement, etc. Les d\u00e9tails sont une question de choix mais le standard Flexbox offre a priori exactement les outils souhait\u00e9s. L\u00e9gende sur le c\u00f4t\u00e9 On peut combiner les attributs de section \u00e0 des attributs d'\u00e9l\u00e9ment, ici sur une image, pour des effets visuels particuli\u00e8rement prononc\u00e9s. https://pandoc.org/MANUAL.html#extension-link_attributes Source : https://necessary-disorder.tumblr.com/post/180757120663","title":"2/ Fabrication d'une pr\u00e9sentation"},{"location":"fabrication/#fabrication-dune-presentation","text":"","title":"Fabrication d'une pr\u00e9sentation"},{"location":"fabrication/#premiere-slide","text":"Le bloc de m\u00e9tadonn\u00e9es en YAML au d\u00e9but du fichier Markdown permet de fournir les \u00e9l\u00e9ments de la premi\u00e8re slide, qui est cr\u00e9\u00e9e automatiquement. Il peut aussi contenir des options propres \u00e0 Pandoc.","title":"Premi\u00e8re slide"},{"location":"fabrication/#slides","text":"Un titre signale le d\u00e9but d'une nouvelle slide. Un seul niveau de titre dans tout le document cr\u00e9e une pr\u00e9sentation lin\u00e9aire ; utiliser deux niveaux diff\u00e9rents cr\u00e9e une pr\u00e9sentation en deux dimensions, avec un d\u00e9filement horizontal et vertical. Si on ne met que les croisillons, cela cr\u00e9e un \u00e9l\u00e9ment titre mais sans contenu textuel, donc une nouvelle slide mais non titr\u00e9e. Pour une pr\u00e9sentation \u00e0 deux niveaux de titre, il faut respecter une r\u00e8gle assez pr\u00e9cise. Au niveau de titre le plus \u00e9lev\u00e9 des deux, il ne faut mettre que des titres, aucun contenu (texte, image, etc.) : il faut imaginer une r\u00e8gle disant qu'un titre de section doit toujours \u00eatre suivi directement d'un titre de sous-section. Cette disposition se justifie surtout dans deux cas : pour faciliter les aller-retours dans un long diaporama ; pour produire une version \u00e0 distribuer (PDF, docx\u2026) un peu structur\u00e9e. \u00c0 noter que le public peut ignorer totalement que la pr\u00e9sentation est sur deux niveaux si les effets de transition et les boutons sont masqu\u00e9s, et que l'orateur ne bascule jamais l'affichage en mode overview (touche O).","title":"Slides"},{"location":"fabrication/#contenu","text":"Toute la syntaxe Markdown est utilisable. On peut \u00e9galement inclure du HTML pour certains \u00e9l\u00e9ments rares mais utiles ( iframe , kbd , etc.).","title":"Contenu"},{"location":"fabrication/#attributs-de-slide","text":"# Titre {data-background-color=\"#000000\"} Ils viennent modifier le fond d'une slide en y affichant une couleur, image, vid\u00e9o ou iframe indiqu\u00e9e entre accolades. L' iframe en fond est particuli\u00e8rement int\u00e9ressante pour montrer des ressources web en tirant parti de la totalit\u00e9 de l'\u00e9cran (voir slide suivante). Les couleurs peuvent \u00eatre identifi\u00e9es par un nom dans le cas des couleurs nomm\u00e9es (ex : blue, red) et par leurs diff\u00e9rents codes dans tous les cas (hexad\u00e9cimal, rgb, rgba\u2026). Les autres ressources sont incluses via leur URL (local ou distant). Lorsqu'on inclut une iframe qui prend toute la taille de l'\u00e9cran avec data-background-iframe , il peut \u00eatre une bonne id\u00e9e de laisser les contr\u00f4les Reveal apparents avec l'option -V controls=true de Pandoc. En effet, interagir avec le contenu de l'iframe d\u00e9place le cadre de l'interaction : les touches du clavier ne d\u00e9clenchent alors plus les fonctions de Reveal, comme le d\u00e9filement des slides. Laisser les boutons visibles permet de passer \u00e0 la slide suivante et de reprendre le cours normal de la pr\u00e9sentation.","title":"Attributs de slide"},{"location":"fabrication/#spans-et-divs","text":"Pandoc propose une syntaxe raccourcie pour appliquer des attributs (classes et identifiants CSS) \u00e0 certains \u00e9l\u00e9ments ou groupe d'\u00e9l\u00e9ments. Ceci cr\u00e9e des spans et des divs en HTML. [texte]{attribut} ![l\u00e9gende](image.jpg){attribut} ::: {.attribut} Contenu (texte, image, etc.) Exemple : [css]{.smallcaps} est en petites capitales car Pandoc rajoute la d\u00e9claration suivante pendant la conversion : .smallcaps { font-variant: small-caps; } Partant de ce principe, on peut introduire ses propres r\u00e8gles de mise en forme ou r\u00e9utiliser un jeu de r\u00e8gles existantes. Par exemple, la CSS appliqu\u00e9e \u00e0 cette pr\u00e9sentation ajoute une bordure et une ombre aux images, ainsi qu'une classe borderless \u00e0 appliquer manuellement aux exceptions. On pourrait tr\u00e8s bien faire l'inverse. C'est le principe des macros dans les traitements de texte ou dans LaTeX.","title":"Spans et divs"},{"location":"fabrication/#edition-multicanal","text":"Dans Reveal, le contenu du div notes ne s'affiche que dans le mode pr\u00e9sentateur. Mais si on convertit le fichier source en Markdown dans un autre format, ce dernier affichera les notes sans aucun traitement sp\u00e9cifique, car un div n'a de sens qu'en HTML et CSS \u2013 Pandoc ne le prend en compte que lorsqu'on fabrique une pr\u00e9sentation Reveal. En s'appuyant sur ce constat, on peut utiliser une autre commande Pandoc sur le m\u00eame fichier pour cr\u00e9er un document distribuable ( handout ) reprenant tout le contenu (en PDF, docx, etc.). Gr\u00e2ce aux attributs rajout\u00e9s \u00e0 Markdown par Pandoc, on peut m\u00eame aller un cran plus loin. CSS permet d'afficher ou masquer des \u00e9l\u00e9ments gr\u00e2ce \u00e0 la propri\u00e9t\u00e9 display , ce qui signifie qu'on peut r\u00e9diger le fichier source de mani\u00e8re \u00e0 masquer une partie du contenu c\u00f4t\u00e9 pr\u00e9sentation (blocs entiers via divs et fragments intra-blocs via spans ) et g\u00e9n\u00e9rer d'autre part un PDF qui affiche tout. Il faut que le contenu s'y pr\u00eate et cela n\u00e9cessite de la gymnastique. Dans une certaine mesure, il s'agit d'emprunter une certaine conception lettr\u00e9e de la programmation ( literate programming , Donald Knuth) et de l'appliquer \u00e0 Pandoc : ce dernier \u00e9tant capable de tisser ( weave ) diff\u00e9rents documents \u00e0 partir d'un m\u00eame fichier, on peut jouer sur les diff\u00e9rences entre formats pour mettre en \u0153uvre un processus d'\u00e9dition multicanal.","title":"\u00c9dition multicanal"},{"location":"fabrication/#recommandations-sur-les-images","text":"R\u00e9solution \u00e9lev\u00e9e, grande taille et zoom Alt + clic Un bon d\u00e9but consiste \u00e0 d\u00e9finir les dimensions maximales d'affichage des images proportionnellement \u00e0 la taille de l'\u00e9cran. C'est plus facile \u00e0 dire qu'\u00e0 faire. Il faut par exemple consid\u00e9rer qu'une image dans une figure devrait \u00eatre moins grande qu'une image standard, pour accommoder la l\u00e9gende positionn\u00e9e dessous.","title":"Recommandations sur les images"},{"location":"fabrication/#juxtaposition-horizontale","text":"La comparaison est un bon outil analytique. Il est facile de juxtaposer des images si elles sont au format paysage et de ratio \u00e9quivalent : on les inclut normalement, s\u00e9par\u00e9es par deux retours \u00e0 la ligne. Par d\u00e9faut, Reveal ne propose pas de solution pour afficher du contenu qui d\u00e9passerait la hauteur de la slide. Quelques lignes de CSS suffisent toutefois \u00e0 cr\u00e9er une classe qui vient ajouter du d\u00e9filement en cas de besoin (ici la classe long ).","title":"Juxtaposition horizontale"},{"location":"fabrication/#juxtaposition-verticale","text":"Pour juxtaposer deux images au format portrait, il faut juste les s\u00e9parer par un retour \u00e0 la ligne. En Markdown, il faut deux retours \u00e0 la ligne pour s\u00e9parer deux paragraphes. En s\u00e9parant des images par un seul retour \u00e0 la ligne, elles appartiennent au m\u00eame paragraphe et sont donc positionn\u00e9es sur une m\u00eame ligne. Assembler deux images et afficher le r\u00e9sultat en image de fond constitue une bonne option pour occuper exactement l'espace maximum disponible, si on n'a pas besoin de l\u00e9gende et si on ma\u00eetrise la r\u00e9solution d'affichage.","title":"Juxtaposition verticale"},{"location":"fabrication/#alignement-dimages","text":"Un retour \u00e0 la ligne automatique ( wrap ) intervient lorsque les images mises bout \u00e0 bout exc\u00e8dent la largeur de l'\u00e9cran.","title":"Alignement d'images"},{"location":"fabrication/#figures","text":"Pandoc traite les images contenant du texte alternatif comme une figure avec image et l\u00e9gende.","title":"Figures"},{"location":"fabrication/#plusieurs-figures","text":"Contrairement aux images simples, Pandoc traite les figures comme des blocs. https://pandoc.org/MANUAL.html#extension-implicit_figures Pour juxtaposer plusieurs figures en ligne, il faut reproduire la situation des images contenues dans un paragraphe, en enveloppant les figures avec un \u00e9l\u00e9ment div sur lequel on applique une classe CSS contenant les d\u00e9clarations utiles : retour automatique, espacement, alignement, etc. Les d\u00e9tails sont une question de choix mais le standard Flexbox offre a priori exactement les outils souhait\u00e9s.","title":"Plusieurs figures"},{"location":"fabrication/#legende-sur-le-cote","text":"On peut combiner les attributs de section \u00e0 des attributs d'\u00e9l\u00e9ment, ici sur une image, pour des effets visuels particuli\u00e8rement prononc\u00e9s. https://pandoc.org/MANUAL.html#extension-link_attributes Source : https://necessary-disorder.tumblr.com/post/180757120663","title":"L\u00e9gende sur le c\u00f4t\u00e9"}]}